import gradio as gr
import tempfile
import os

from transcribe import transcrire_audio
from extract import (
    generer_resume,
    extraire_actions_hybride,
    extraire_decisions_hybride
)

def analyser_reunion(fichier_audio):
    if not fichier_audio:
        return "‚ùå Aucun fichier fourni.", "", "", None

    # √âtape 1 : Transcription de l'audio
    transcription = transcrire_audio(fichier_audio.name)
    if transcription.startswith("‚ùå"):
        return transcription, "", "", None

    # √âtape 2 : Analyse NLP
    resume = generer_resume(transcription)
    actions = extraire_actions_hybride(transcription)
    decisions = extraire_decisions_hybride(transcription)

    # √âtape 3 : Formatage des r√©sultats
    resume_affichage = f"üìÑ R√©sum√© :\n{resume}"
    actions_affichage = (
        "üìù T√¢ches identifi√©es :\n" + "\n".join([f"- {a}" for a in actions])
        if actions else "Aucune t√¢che d√©tect√©e."
    )
    decisions_affichage = (
        "‚úÖ D√©cisions prises :\n" + "\n".join([f"- {d}" for d in decisions])
        if decisions else "Aucune d√©cision d√©tect√©e."
    )

    # √âtape 4 : Export dans un fichier texte
    contenu_export = (
        f"{resume_affichage}\n\n"
        f"{actions_affichage}\n\n"
        f"{decisions_affichage}\n\n"
        f"üó£Ô∏è Transcription brute :\n{transcription}"
    )

    nom_fichier = "compte_rendu_reunion.txt"
    chemin_export = os.path.join(tempfile.gettempdir(), nom_fichier)
    with open(chemin_export, "w", encoding="utf-8") as f:
        f.write(contenu_export)

    return resume_affichage, actions_affichage, decisions_affichage, chemin_export

# Interface Gradio
demo = gr.Interface(
    fn=analyser_reunion,
    inputs=[
        gr.File(label="üéß Fichier audio/vid√©o de la r√©union", file_types=[".mp3", ".mp4", ".wav", ".m4a"])
    ],
    outputs=[
        gr.Textbox(label="üìå R√©sum√© synth√©tique"),
        gr.Textbox(label="üìù Liste des t√¢ches"),
        gr.Textbox(label="‚úÖ Liste des d√©cisions"),
        gr.File(label="‚¨áÔ∏è T√©l√©charger le compte-rendu complet")
    ],
    title="AI R√©sumeur de R√©union",
    description=(
        "Uploade un enregistrement de r√©union et r√©cup√®re automatiquement un r√©sum√©, "
        "les d√©cisions prises et les t√¢ches √† effectuer."
    ),
)

if __name__ == "__main__":
    demo.launch()
